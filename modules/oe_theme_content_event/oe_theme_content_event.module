<?php

/**
 * @file
 * Module file used for theming the Event content type.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\oe_theme\ValueObject\DateValueObject;

/**
 * Implements hook_theme().
 */
function oe_theme_content_event_theme() {
  return [
    'oe_theme_content_event_registration_button' => [
      'variables' => [
        'label' => '',
        'url' => '',
        'description' => '',
        'enabled' => FALSE,
        'show_button' => TRUE,
      ],
      'template' => 'oe-theme-content-event-registration-button',
    ],
    'oe_theme_content_event_summary' => [
      'variables' => [
        'text' => '',
      ],
      'template' => 'oe-theme-content-event-summary',
    ],
    'oe_theme_content_event_contacts' => [
      'variables' => [
        'general' => [],
        'press' => [],
      ],
      'template' => 'oe-theme-content-event-contacts',
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_event_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Run only on event content type.
  if ($entity->bundle() !== 'oe_event') {
    return;
  }

  // Field labels are different in frontend and backend.
  // Here we override them, per view mode.
  if ($build['#view_mode'] === 'full') {
    $label_overrides = [
      'oe_event_dates' => t('When'),
      'oe_event_online_type' => t('Live stream'),
      'oe_event_languages' => t('Languages'),
      'oe_event_website' => t('Website'),
      'oe_event_registration_capacity' => t('Number of seats'),
      'oe_event_entrance_fee' => t('Entrance fee'),
      'oe_event_venue' => t('Where'),
    ];

    foreach ($label_overrides as $name => $label_override) {
      if (!$entity->get($name)->isEmpty() && isset($build[$name]['#title'])) {
        $build[$name]['#title'] = $label_override;
      }
    }
  }
}

/**
 * Implements template_preprocess_node() for the Event node type.
 */
function oe_theme_content_event_preprocess_node__oe_event__teaser(array &$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  $dates = $node->get('oe_event_dates')->first();
  $variables['pattern_date'] = DateValueObject::fromDateRangeItem($dates);
}
